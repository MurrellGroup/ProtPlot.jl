name: CI
on:
  push:
    branches:
      - main
    tags: ['*']
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}

jobs:
  test:
    name: ProtPlot Julia ${{ matrix.version }} - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.10' # Use the specific version you need
        os:
          - ubuntu-latest
        arch:
          - x64
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: julia-actions/cache@v2
      - run: sudo apt-get update && sudo apt-get install -y xorg-dev mesa-utils xvfb libgl1 freeglut3-dev libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev libxext-dev
      - name: Build Package
        uses: julia-actions/julia-buildpkg@v1
      - name: Run Tests
        run: DISPLAY=:0 xvfb-run -s '-screen 0 1024x768x24' julia --color=yes --project -e 'using Pkg; Pkg.test("ProtPlot", coverage=true)'
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v5
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          file: lcov.info
  docs:
    name: Build and deploy documentation
    runs-on: ubuntu-latest
    steps:
      - name: Install binary dependencies
        run: sudo apt-get update && sudo apt-get install -y xorg-dev mesa-utils xvfb libgl1 freeglut3-dev libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev libxext-dev
      - uses: actions/checkout@v4
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v4
      - uses: julia-actions/setup-julia@latest
        with:
          version: '1'
      - uses: julia-actions/cache@v2
      - name: Install documentation dependencies
        run: |
          xvfb-run -s '-screen 0 1024x768x24' julia --project=docs -e 'using Pkg; Pkg.instantiate()'
        env:
          DISPLAY: ':0'
          DATADEPS_ALWAYS_ACCEPT: 'true'
          RASTERDATASOURCES_PATH: '~/.julia/artifacts/RasterDataSources'
      - uses: julia-actions/julia-docdeploy@v1
        with:
          prefix: xvfb-run
          install-package: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # If authenticating with GitHub Actions token
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }} # If authenticating with SSH deploy key
          DISPLAY: ':0'
          DATADEPS_ALWAYS_ACCEPT: 'true'
          RASTERDATASOURCES_PATH: '~/.julia/artifacts/RasterDataSources'